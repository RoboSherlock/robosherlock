<launch>
  <!-- Analysis engines to execute, comma separated list: eninge1,engine2,... -->
  <arg name="ae"               default="demo"/> <!-- Short version for analysis_engines -->
  <arg name="analysis_engines" default="$(arg ae)"/>
  <!-- Enable / disable visualization -->
  <arg name="vis"              default="true"/> <!-- Short version for visualization -->
  <arg name="visualization"    default="$(arg vis)"/>
  <!-- Path to where images and point clouds should be stored -->
  <arg name="save_path"        default=""/>
  <arg name="withIDRes"        default="false"/>
  <arg name="wait"             default="false"/>

  <arg name="parallel"              default="true"/>

  <!-- Machine on with the nodes should run. -->
  <arg name="machine"          default="localhost"/>
  <!-- Whether the machine for localhost should be defined our not. Disable this if the launch file is included somewhere where machines are already defined. -->
  <arg name="define_machine"   default="true"/>
  <arg name="debug"            default="false"/>
  <arg name="launch-prefix"    value="gdb -ex run --args" if="$(arg debug)" />
  <arg name="launch-prefix"    value="" unless="$(arg debug)" />

  <!-- Default machine definition. -->
  <machine name="localhost" address="localhost" if="$(arg define_machine)"/>

  <!-- launch robosherlock with the pipeline defined in demo.xml-->
  <node name="RoboSherlock" pkg="robosherlock"  machine="$(arg machine)" type="run" output="screen"
        launch-prefix="$(arg launch-prefix)">
    <param name="analysis_engines" type="str"  value="$(arg analysis_engines)"/>
    <param name="visualization"    type="bool" value="$(arg visualization)"/>
    <param name="parallel"         type="bool" value="$(arg parallel)"/>
    <param name="save_path"        type="str"  value="$(arg save_path)"/>
    <param name="withIDRes"        type="bool" value="$(arg withIDRes)"/>
    <param name="wait"             type="bool" value="$(arg wait)"/>
  </node>
</launch>
